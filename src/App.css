.App {
  max-width: 800px;
  margin: 4px auto;
}

button {
  background: none;
  border: 2px solid #fff;
  padding: 6px 12px;
  border-radius: 4px;
  color: #fff;
  font-weight: bold;
  cursor: pointer;
  font-size: 1rem;
  margin: 0 10px;
}
button:hover {
  background-color: #c23866;
  color: #fff;
}
.card-grid {
  margin-top: 40px;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr; /* fr == fraction so fraction of the space available */
  grid-gap: 20px;
}

/* styles for the cards */
.card {
  position: relative;
}

.card img {
  width: 100%;
  display: block;
}

/* adding the dynamic css styles */
/* front of the card - the picture */
.card .front {
  /* Instead of using display none, we will use the rotate animation to hide it */
  transform: rotateY(90deg);
  /* flipping animation */
  transition: all ease-in 0.2s;
  position: absolute; /* This will make it sit on top of the other card */
  scale: 1.1;
  width: 120px;
}
.flipped .front {
  /* once flipped is true and the flipped style is applied, the image will rotate to its normal position and be visible to the user */
  transform: rotateY(0deg);
  transition-delay: 0.2s;
}

/* back of card - cover */
.card .back {
  /* flipping animation */
  transition: all ease-in 0.2s;
  transition-delay: 0.2s;
  cursor: pointer;
  width: 120px;
}

.flipped .back {
  transform: rotateY(90deg);
  transition-delay: 0s;
}

/* ruls of the game - styles */
.overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);

  display: grid;
  place-content: center;
}

.container {
  background-color: #fff;
  border-radius: 1rem;
  width: 600px;
  height: auto;
  padding: 50px;
  color: #000;
}

.container h1 {
  text-decoration: underline;
}

.container p {
  text-align: left;
}

.container ol {
  text-align: left;
}

.hideRuleButton {
  border: 1px solid black;
  color: black;
}

.hideRuleButton:hover {
  border: none;
}
